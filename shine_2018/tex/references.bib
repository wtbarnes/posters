
@article{barnes_inference_2016,
  title = {Inference of {{Heating Properties}} from "{{Hot}}" {{Non}}-Flaring {{Plasmas}} in {{Active Region Cores}}. {{I}}. {{Single Nanoflares}}},
  volume = {829},
  issn = {0004-637X},
  doi = {10.3847/0004-637X/829/1/31},
  abstract = {The properties that are expected of ``hot'' non-flaring 
plasmas due to nanoflare heating in active regions are investigated
using hydrodynamic modeling tools, including a two-fluid development of
the Enthalpy Based Thermal Evolution of Loops code. Here we study a
single nanoflare and show that while simple models predict an emission
measure distribution extending well above 10 MK, which is consistent
with cooling by thermal conduction, many other effects are likely to
limit the existence and detectability of such plasmas. These include:
differential heating between electrons and ions, ionization
non-equilibrium, and for short nanoflares, the time taken for the
coronal density to increase. The most useful temperature range to look
for this plasma, often called the ``smoking gun'' of nanoflare
heating, lies between 106.6 and 107 K. Signatures
of the actual heating may be detectable in some instances.},
  journal = {The Astrophysical Journal},
  author = {Barnes, W. T. and Cargill, P. J. and Bradshaw, S. J.},
  month = sep,
  year = {2016},
  keywords = {hydrodynamics,plasmas,Sun: corona},
  pages = {31},
  file = {/Users/willbarnes/Google Drive/School/Papers/Barnes_et_al_2016_2.pdf}
}

@article{astropy_collaboration_astropy_2013,
  title = {Astropy: {{A}} Community {{Python}} Package for Astronomy},
  volume = {558},
  issn = {0004-6361},
  shorttitle = {Astropy},
  doi = {10.1051/0004-6361/201322068},
  abstract = {We present the first public version (v0.2) of the open-source and community-developed Python package, Astropy. This package provides core astronomy-related functionality to the community, including support for domain-specific file formats such as flexible image transport system (FITS) files, Virtual Observatory (VO) tables, and common ASCII table formats, unit and physical quantity conversions, physical constants specific to astronomy, celestial coordinate and time transformations, world coordinate system (WCS) support, generalized containers for representing gridded as well as tabular data, and a framework for cosmological transformations and conversions. Significant functionality is under activedevelopment, such as a model fitting framework, VO client and server tools, and aperture and point spread function (PSF)
photometry tools. The core development team is actively making additions and enhancements to the current code base, and we encourage anyone interested to participate in the development of future Astropy versions.},
  journal = {Astronomy and Astrophysics},
  author = {{Astropy Collaboration} and Robitaille, Thomas P. and Tollerud, Erik J. and Greenfield, Perry and Droettboom, Michael and Bray, Erik and Aldcroft, Tom and Davis, Matt and Ginsburg, Adam and {Price-Whelan}, Adrian M. and Kerzendorf, Wolfgang E. and Conley, Alexander and Crighton, Neil and Barbary, Kyle and Muna, Demitri and Ferguson, Henry and Grollier, Fr\'ed\'eric and Parikh, Madhura M. and Nair, Prasanth H. and Unther, Hans M. and Deil, Christoph and Woillez, Julien and Conseil, Simon and Kramer, Roban and Turner, James E. H. and Singer, Leo and Fox, Ryan and Weaver, Benjamin A. and Zabalza, Victor and Edwards, Zachary I. and Azalee Bostroem, K. and Burke, D. J. and Casey, Andrew R. and Crawford, Steven M. and Dencheva, Nadia and Ely, Justin and Jenness, Tim and Labrie, Kathleen and Lim, Pey Lian and Pierfederici, Francesco and Pontzen, Andrew and Ptak, Andy and Refsdal, Brian and Servillat, Mathieu and Streicher, Ole},
  month = oct,
  year = {2013},
  keywords = {methods: data analysis,methods: miscellaneous,virtual observatory tools},
  pages = {A33},
  file = {/Users/willbarnes/Google Drive/School/Papers/Astropy_Collaboration_et_al_2013.pdf}
}

@article{sunpy_community_sunpypython_2015,
  title = {{{SunPy}}\textemdash{{Python}} for Solar Physics},
  volume = {8},
  doi = {10.1088/1749-4699/8/1/014009},
  abstract = {This paper presents SunPy (version 0.5), a community-developed Python package for solar physics. Python, a free, cross-platform,
general-purpose, high-level programming language, has seen widespread adoption among the scientific community, resulting in the availability of a large number of software packages, from numerical computation (NumPy, SciPy) and machine learning (scikit-learn) to visualization and plotting (matplotlib). SunPy is a data-analysis environment specializing in providing the software necessary to analyse solar and heliospheric data in Python. SunPy is open-source software (BSD licence) and has an open and transparent development workflow that anyone can contribute to. SunPy provides access to solar data through integration with the Virtual Solar Observatory (VSO), the Heliophysics Event Knowledgebase (HEK), and the HELiophysics Integrated Observatory (HELIO) webservices. It
currently supports image data from major solar missions (e.g., SDO, SOHO, STEREO, and IRIS), time-series data from missions such as GOES, SDO/EVE, and PROBA2/LYRA, and radio spectra from e-Callisto and
STEREO/SWAVES. We describe SunPy's functionality, provide examples of solar data analysis in SunPy, and show how Python-based solar data-analysis can leverage the many existing tools already available in Python. We discuss the future goals of the project and encourage interested users to become involved in the planning and development of SunPy.},
  journal = {Computational Science and Discovery},
  author = {{SunPy Community} and Mumford, Stuart J. and Christe, Steven and {P\'erez-Su\'arez}, David and Ireland, Jack and Shih, Albert Y. and Inglis, Andrew R. and Liedtke, Simon and Hewett, Russell J. and Mayer, Florian and Hughitt, Keith and Freij, Nabil and Meszaros, Tomas and Bennett, Samuel M. and Malocha, Michael and Evans, John and Agrawal, Ankit and Leonard, Andrew J. and Robitaille, Thomas P. and Mampaey, Benjamin and {Campos-Rozo}, Jose Iv\'an and Kirk, Michael S.},
  month = jan,
  year = {2015},
  pages = {014009}
}


